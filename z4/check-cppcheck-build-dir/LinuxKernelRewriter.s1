operator==
operator!=
operator<< global:[NullORC] call:[format] noreturn:[format]
operator< global:[NullORC]
LinuxKernelRewriter
preCFGInitializer call:[processLKSections,processSMPLocks,readAltInstructions,readBugTable,readExceptionTable,readORCTables,readPCIFixupTable,readParaInstructions,readStaticCalls,readStaticKeysJumpTable,success] noreturn:[success]
postCFGInitializer call:[processAltInstructionsPostCFG,processORCPostCFG,success] noreturn:[success]
preEmitFinalizer call:[processInstructionFixups,rewriteBugTable,rewriteExceptionTable,rewriteORCTables,rewriteParaInstructions,rewriteStaticCalls,rewriteStaticKeysJumpTable,success] noreturn:[success]
postEmitFinalizer call:[success,updateStaticKeysJumpTablePostEmit,validateORCTables] noreturn:[success]
processLKSections call:[processLKKSymtab] noreturn:[processLKKSymtab]
processLKKSymtab call:[addRelocation,assert,getAddress,getBinaryFunctionAtAddress,getPC32,getSignedValueAtAddress,getSize,getSymbol,getUniqueSectionByName] noreturn:[addRelocation]
processSMPLocks call:[Cursor,DataExtractor,addAnnotation,c_str,createStringError,get,getAddress,getBinaryFunctionContainingAddress,getCodePointerSize,getContents,getInstructionAtOffset,getOrCreateInstLabel,getSize,getU32,getUniqueSectionByName,hasAnnotation,isLittleEndian,outs,push_back,shouldEmit,success,takeError,tell,toString,utohexstr] noreturn:[createStringError,push_back,success]
processInstructionFixups call:[addRelocation,shouldEmit] noreturn:[addRelocation]
readORCTables global:[NullORC] call:[DataExtractor,IPCursor,ORCCursor,ORCListEntry,addAnnotation,assert,back,back_inserter,begin,c_str,copy,createStringError,errs,getAddress,getBinaryFunctionContainingAddress,getBinaryFunctions,getCodePointerSize,getContents,getInstructionAtOffset,getInstructionContainingOffset,getSize,getU16,getU32,getUniqueSectionByName,hasAnnotation,hasInstructions,isLittleEndian,make_second_range,outs,partition_point,push_back,setHasORC,sort,success,takeError,tell,toString,utohexstr] noreturn:[addAnnotation,createStringError,getAddress,setHasORC,success]
processORCPostCFG global:[NullORC] call:[addAnnotation,assert,begin,errs,front,getAddress,getBinaryFunctions,hasORC,make_second_range,partition_point,setHasORC,success] noreturn:[addAnnotation,getAddress,setHasORC,success]
rewriteORCTables global:[NullORC] call:[BinaryStreamWriter,LLVM_DEBUG,addRelocation,bytesRemaining,createInPlaceWriter,createStringError,dbgs,emitColdORC,emitORC,emitORCEntry,empty,end,get,getAddress,getBinaryFunctions,getInputFileOffset,getLayout,getMainFragment,getOffset,getOrCreateInstLabel,getPC32,getSize,getSplitFragments,hasORC,isLittleEndian,make_second_range,max,setHasORC,setOutputFileOffset,shouldEmit,start,success,updateContents,writeInteger] noreturn:[BinaryStreamWriter,addRelocation,createStringError,setHasORC,success]
validateORCTables call:[DataExtractor,IPCursor,assert,c_str,createStringError,getAddress,getCodePointerSize,getOutputContents,getU32,isLittleEndian,success,takeError,tell,toString] noreturn:[createStringError,success]
readStaticCalls call:[Cursor,DE,addAnnotation,c_str,containsAddress,createStringError,get,getAddress,getBinaryDataByName,getBinaryFunctionContainingAddress,getCodePointerSize,getContents,getInstructionAtOffset,getOrCreateInstLabel,getSectionForAddress,getU32,hasAnnotation,hasInstructions,isLittleEndian,outs,push_back,shouldEmit,size,success,takeError,tell,toString,utohexstr] noreturn:[createStringError,push_back,success]
rewriteStaticCalls call:[addRelocation,getAddress,shouldEmit,success] noreturn:[addRelocation,success]
readExceptionTable call:[Cursor,DE,addAnnotation,addEntryPointAtOffset,c_str,createStringError,getAddress,getBinaryFunctionContainingAddress,getCodePointerSize,getContents,getInstructionAtOffset,getName,getSize,getSymbol,getU32,getUniqueSectionByName,insert,isLittleEndian,outs,shouldEmit,success,takeError,tell,toString,utohexstr] noreturn:[addAnnotation,createStringError,insert,success]
rewriteExceptionTable call:[setSimple,success] noreturn:[setSimple,success]
readParaInstructions call:[Align,Cursor,DataExtractor,addAnnotation,alignTo,c_str,createStringError,eof,getAddress,getBinaryFunctionContainingAddress,getCodePointerSize,getContents,getInstructionAtOffset,getU64,getU8,getUniqueSectionByName,isLittleEndian,isValidOffset,outs,seek,shouldEmit,success,takeError,tell,toString,utohexstr] noreturn:[addAnnotation,createStringError,success]
skipFunctionsWithAnnotation call:[any_of,getBinaryFunctions,hasAnnotation,make_second_range,setSimple,shouldEmit] noreturn:[hasAnnotation]
rewriteParaInstructions call:[skipFunctionsWithAnnotation,success] noreturn:[success]
readBugTable call:[Cursor,DE,addAnnotation,c_str,createStringError,getAddress,getBinaryFunctionContainingAddress,getCodePointerSize,getContents,getInstructionAtOffset,getSize,getU32,getUniqueSectionByName,isLittleEndian,outs,push_back,seek,shouldEmit,success,takeError,tell,toString,utohexstr] noreturn:[createStringError,push_back,success]
rewriteBugTable call:[addRelocation,count,get,getBinaryFunctions,getOrCreateInstLabel,hasAnnotation,insert,make_second_range,shouldEmit,success] noreturn:[addRelocation,success]
readAltInstructions call:[LLVM_DEBUG,consumeError,dbgs,getNumOccurrences,getUniqueSectionByName,move,outs,push_back,success,tryReadAltInstructions] noreturn:[push_back,success,tryReadAltInstructions]
tryReadAltInstructions call:[Cursor,DataExtractor,addAnnotation,c_str,createStringError,eof,errs,getAddress,getBinaryFunctionContainingAddress,getCodePointerSize,getContents,getInstructionAtOffset,getSize,getU32,getU8,getUnsigned,hasAnnotation,hasInstructions,isLittleEndian,outs,setIgnored,shouldEmit,success,takeError,tell,toString,to_string,utohexstr] noreturn:[addAnnotation,createStringError,setIgnored,success,to_string]
processAltInstructionsPostCFG call:[skipFunctionsWithAnnotation] noreturn:[skipFunctionsWithAnnotation]
readPCIFixupTable call:[Cursor,DataExtractor,c_str,createStringError,eof,errs,getAddress,getBinaryFunctionContainingAddress,getCodePointerSize,getContents,getSize,getU16,getU32,getUniqueSectionByName,isLittleEndian,outs,setSimple,shouldEmit,success,takeError,tell,toString,utohexstr] noreturn:[createStringError,setSimple,success]
readStaticKeysJumpTable call:[Cursor,DE,JumpInfoEntry,addAnnotation,back,c_str,computeInstructionSize,containsAddress,createCondBranch,createLongCondBranch,createStringError,get,getAddress,getBinaryDataByName,getBinaryFunctionContainingAddress,getCodePointerSize,getContents,getInstructionAtOffset,getOffset,getSectionForAddress,getSize,getU32,getU64,isBranch,isLittleEndian,isNoop,move,moveAnnotations,outs,push_back,registerBranch,setDynamicBranch,setOffset,setSize,shouldEmit,success,takeError,tell,toString,utohexstr] noreturn:[createCondBranch,createLongCondBranch,createStringError,setOffset,setSize,success]
rewriteStaticKeysJumpTable call:[addRelocation,assert,createLongUncondBranch,createUncondBranch,get,getAddress,getBinaryFunctions,getDynamicBranchID,getOrCreateInstLabel,getSize,getTargetSymbol,insert,isDynamicBranch,llvm_unreachable,make_second_range,move,moveAnnotations,outs,shouldEmit,success] noreturn:[addRelocation,createLongUncondBranch,createUncondBranch,insert,llvm_unreachable,success]
updateStaticKeysJumpTablePostEmit call:[Cursor,DE,LLVM_DEBUG,VecOS,assert,c_str,contains,createStringError,dbgs,get,getAddress,getBinaryDataByName,getBinaryFunctionContainingAddress,getCodePointerSize,getImageAddress,getImageSize,getInstruction,getOutputContents,getU32,getU64,isBranch,isEmitted,isFinalized,isLittleEndian,llvm_unreachable,nulls,outs,size,slice,success,takeError,tell,toString,utohexstr,writeNopData] noreturn:[createStringError,llvm_unreachable,success]
