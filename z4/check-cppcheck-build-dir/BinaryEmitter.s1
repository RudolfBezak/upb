padFunction call:[empty,find,hasNameRegex,stoull,substr]
BinaryEmitter
emitAll call:[Align,emit,emitBinary,emitDataSections,emitDebugLineInfoForOriginalFunctions,emitFunctions,getDwarfLineSection,getDwarfLineStrSection,getRuntimeLibrary,getTextSection,initSections,isELF,setAlignment,setFlags,setUseAssemblerInfoForParsing] noreturn:[emit,emitBinary,setFlags,setUseAssemblerInfoForParsing]
emitFunctions call:[LLVM_DEBUG,assert,dbgs,emit,emitFunction,emitLabel,empty,fragment_size,getAllowAutoPadding,getCodeSection,getFunctionNumber,getHotTextEndSymbol,getHotTextStartSymbol,getInjectedBinaryFunctions,getLayout,getMainFragment,getSortedFunctions,getSplitFragments,getTextSection,getWarmCodeSectionName,hasConstantIsland,hasValidProfile,isSimple,isSplit,setAllowAutoPadding,setEmitted,shouldEmit,switchSection] noreturn:[emitFunction,emitLabel,setAllowAutoPadding,setEmitted,switchSection]
emitFunction call:[Align,LLVM_DEBUG,addGenDwarfSection,assert,begin,cie,create,createSub,dbgs,emitBytes,emitCFIEndProc,emitCFIInstruction,emitCFILsda,emitCFIPersonality,emitCFIStartProc,emitCodeAlignment,emitELFSize,emitFill,emitFunctionBody,emitIntValue,emitJumpTables,emitLSDA,emitLabel,emitLineInfoEnd,emitSymbolAttribute,empty,ensureMinAlignment,getAlign,getAsmInfo,getCodeSection,getCodeSectionName,getContext,getDWARFUnit,getFragmentNum,getFunctionEndLabel,getInitialFrameState,getLSDASymbol,getMaxAlignmentBytes,getMaxColdAlignmentBytes,getMinAlign,getPersonalityEncoding,getPersonalityFunction,getState,getSymbol,getSymbols,getTextAlignFillValue,getTrapFillValue,hasCFI,hasDotTypeDotSizeDirective,hasIslandsInfo,hasNameRegex,hasNonPseudoInstructions,isCold,isMainFragment,isSplitFragment,is_contained,padFunction,setHasInstructions,size,switchSection] noreturn:[emitBytes,emitCFIEndProc,emitCFIInstruction,emitCFILsda,emitCFIPersonality,emitCodeAlignment,emitELFSize,emitFill,emitJumpTables,emitLabel,emitLineInfoEnd]
emitFunctionBody call:[VecOS,assert,begin,createTempSymbol,duplicateConstantIslands,emitBytes,emitCFIInstruction,emitCodeAlignment,emitConstantIslands,emitInstruction,emitLabel,emitLineInfo,emplace_back,empty,end,front,get,getAlign,getAlignment,getAlignmentMaxBytes,getCFIFor,getDWARFUnit,getInstLabel,getLabel,getLayout,getLoc,getLocSyms,getOffset,getSecondaryEntryPointSymbol,getSize,getTrapFillValue,hasConstantIsland,isCFI,isEntryPoint,isHotColdSplit,isLandingPad,isNoop,isPseudo,isSplitFragment,isX86,requiresAddressTranslation,writeNopData] noreturn:[createTempSymbol,duplicateConstantIslands,emitBytes,emitCodeAlignment,emitConstantIslands,emitInstruction,emitLabel,emplace_back]
emitConstantIslands call:[Align,LLVM_DEBUG,assert,begin,count,dbgs,emit,emitBytes,emitCI,emitCodeAlignment,emitConstantIslands,emitLabel,empty,end,getAddress,getConstantIslandAlignment,getContents,getFunctionColdConstantIslandLabel,getFunctionConstantIslandLabel,getIslandInfo,getMaxSize,getName,getOriginSection,getSizeForType,hasIslandsInfo,hasName,isInjected,isUndefined,lower_bound,min,next,outs,size,slice,string,substr,utohexstr] noreturn:[assert,emit,emitCI,emitConstantIslands,emitLabel,getMaxSize]
emitLineInfo call:[MCDwarfLineEntry,addDebugFilenameToUnit,addLineEntry,assert,clearDwarfLocSeen,createTempSymbol,fromSMLoc,getCompileUnitForOffset,getCurrentDwarfLoc,getCurrentSectionOnly,getDWARFLineTable,getDWARFUnit,getDwarfLineTable,getLineTableForUnit,getMCLineSections,getOffset,getPointer,setCurrentDwarfLoc] noreturn:[addDebugFilenameToUnit,createTempSymbol]
emitLineInfoEnd call:[MCDwarfLineEntry,addLineEntry,assert,clearDwarfLocSeen,getCurrentDwarfLoc,getCurrentSectionOnly,getDWARFUnit,getDwarfLineTable,getMCLineSections,getOffset,setCurrentDwarfLoc] noreturn:[addLineEntry]
emitJumpTables call:[begin,emitJumpTable,end,getContext,getDataSection,getELFSection,getName,getReadOnlySection,hasJumpTables,hasProfile,isSimple,jumpTables,outs,print,registerOrUpdateSection,replace,setAnonymous,setOutputSection,size,str,updateOriginal] noreturn:[emitJumpTable,print,updateOriginal]
emitJumpTable call:[Align,LLVM_DEBUG,assert,create,createSub,dbgs,emitLabel,emitSymbolValue,emitValue,emitValueToAlignment,empty,end,find,getAddress,getBinaryDataByName,getContext,getName,getSymbols,size,switchSection,utohexstr] noreturn:[emitLabel,emitSymbolValue,emitValue,emitValueToAlignment,switchSection]
emitCFIInstruction call:[AddComment,emitCFIAdjustCfaOffset,emitCFIDefCfa,emitCFIDefCfaOffset,emitCFIDefCfaRegister,emitCFIEscape,emitCFIGnuArgsSize,emitCFINegateRAState,emitCFIOffset,emitCFIRegister,emitCFIRestore,emitCFISameValue,emitCFIUndefined,emitCFIWindowSave,getComment,getOffset,getOperation,getRegister,getRegister2,getValues,llvm_unreachable]
emitLSDA call:[Align,assert,create,createNamedTempSymbol,createSub,emitAbsoluteSymbolDiff,emitIntValue,emitLabel,emitLandingPad,emitSymbolValue,emitULEB128IntValue,emitValue,emitValueToAlignment,empty,getCallSites,getDWARFEncodingSize,getFragmentNum,getLSDAActionTable,getLSDASection,getLSDASymbol,getLSDATypeAddressTable,getLSDATypeEncoding,getLSDATypeIndexTable,getLSDATypeTable,getOrCreateGlobalSymbol,getSymbol,getULEB128Size,llvm_unreachable,size,sizeof,switchSection,void] noreturn:[emitAbsoluteSymbolDiff,emitIntValue,emitSymbolValue,emitULEB128IntValue,emitValue,getULEB128Size]
emitDebugLineInfoForOriginalFunctions call:[addLineTableSequence,back,emitDebugLineInfoForUnprocessedCUs,empty,front,getAddress,getBinaryFunctions,getDWARFLineTable,getDWARFUnit,getDwarfLineTable,getMaxSize,getOffset,getSize,isEmitted,lookupAddressRange] noreturn:[addLineTableSequence,emitDebugLineInfoForUnprocessedCUs]
emitDebugLineInfoForUnprocessedCUs call:[addRawContents,compile_units,count,end,find,get,getDwarfLineTable,getLineSection,getNumCompileUnits,getOffset,getUnitDIE,push_back,reserve,size,slice,sort,toSectionOffset,upper_bound] noreturn:[addRawContents,push_back]
emitDataSections call:[clearRelocations,emitAsData,getName,hasRelocations,hasSectionRef,sections] noreturn:[clearRelocations]
emitBinaryContext call:[BinaryEmitter,emitAll] noreturn:[emitAll]
emitFunctionBody call:[BinaryEmitter,emitFunctionBody,getBinaryContext] noreturn:[emitFunctionBody]
