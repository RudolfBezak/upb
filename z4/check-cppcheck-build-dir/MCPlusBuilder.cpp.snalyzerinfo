SetUp call:[initalizeLLVM,initializeBolt,prepareElf] noreturn:[initializeBolt]
initalizeLLVM call:[InitializeAllAsmParsers,InitializeAllAsmPrinters,InitializeAllDisassemblers,InitializeAllTargetInfos,InitializeAllTargetMCs,InitializeAllTargets] noreturn:[InitializeAllAsmPrinters]
prepareElf call:[GetParam,Source,StringRef,cantFail,createObjectFile,memcpy,sizeof] noreturn:[cantFail]
initializeBolt call:[ASSERT_FALSE,GetParam,cantFail,create,createBinaryContext,createMCPlusBuilder,errs,get,getArch,getFileName,initializeTarget,makeTriple,outs] noreturn:[initializeTarget]
testRegAliases call:[ASSERT_EQ,ASSERT_TRUE,GTEST_SKIP,GetParam,count,getAliases] noreturn:[ASSERT_TRUE,GTEST_SKIP]
TEST_P call:[sizeof,testRegAliases] noreturn:[testRegAliases]
TEST_P call:[sizeof,testRegAliases] noreturn:[testRegAliases]
TEST_P call:[ASSERT_EQ,ASSERT_TRUE,GTEST_SKIP,GetParam,addInstruction,addOperand,createBasicBlock,createInjectedBinaryFunction,createReg,getImm,getOpcode,getOperand,getReg,replaceRegWithImm,setOpcode] noreturn:[ASSERT_EQ,GTEST_SKIP]
TEST_P call:[ASSERT_DEATH,ASSERT_EQ,ASSERT_TRUE,MCLandingPad,addEHInfo,clear,createNamedTempSymbol,createTailCall,get,getEHInfo,has_value,value] noreturn:[ASSERT_DEATH]
